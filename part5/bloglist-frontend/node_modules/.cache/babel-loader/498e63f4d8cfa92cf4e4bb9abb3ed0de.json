{"ast":null,"code":"var _jsxFileName = \"/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/components/Togglable.js\";\nimport React, { useState } from 'react';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false); // If visible, means the note creation form can be seen\n\n  const toggleVisible = () => {\n    setVisible(!visible);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, visible === false ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"new note\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.children, React.createElement(\"button\", {\n    onClick: toggleVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"cancel\")));\n};\n\nexport default Togglable;","map":{"version":3,"sources":["/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","Togglable","props","visible","setVisible","toggleVisible","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC,CAD2B,CAG3B;;AACA,QAAMK,aAAa,GAAG,MAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,KAAK,KAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,QADT,EAEE;AAAQ,IAAA,OAAO,EAAED,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CANJ,CADF;AAcD,CAtBD;;AAwBA,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  // If visible, means the note creation form can be seen\n  const toggleVisible = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      {visible === false ? (\n        <div>\n          <button onClick={toggleVisible}>new note</button>\n        </div>\n      ) : (\n        <div>\n          {props.children}\n          <button onClick={toggleVisible}>cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Togglable;\n"]},"metadata":{},"sourceType":"module"}