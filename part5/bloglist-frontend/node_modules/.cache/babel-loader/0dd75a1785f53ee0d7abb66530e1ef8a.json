{"ast":null,"code":"var _jsxFileName = \"/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/components/Togglable.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = ({\n  buttonLabel\n}) => {\n  const [visible, setVisible] = useState(false); // If visible, means the note creation form can be seen\n\n  const toggleVisible = () => {\n    setVisible(!visible);\n  };\n\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, visible === false ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.buttonLabel)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children, React.createElement(\"button\", {\n    onClick: toggleVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"cancel\")));\n};\n\nexport default Togglable;","map":{"version":3,"sources":["/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","PropTypes","Togglable","buttonLabel","visible","setVisible","toggleVisible","propTypes","string","isRequired","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC,CADoC,CAGpC;;AACA,QAAMM,aAAa,GAAG,MAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIAF,EAAAA,SAAS,CAACK,SAAV,GAAsB;AACpBJ,IAAAA,WAAW,EAAEF,SAAS,CAACO,MAAV,CAAiBC;AADV,GAAtB;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,KAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCI,KAAK,CAACP,WAAvC,CADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,KAAK,CAACC,QADT,EAEE;AAAQ,IAAA,OAAO,EAAEL,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CANJ,CADF;AAcD,CA1BD;;AA4BA,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = ({ buttonLabel}) => {\n  const [visible, setVisible] = useState(false);\n\n  // If visible, means the note creation form can be seen\n  const toggleVisible = () => {\n    setVisible(!visible);\n  };\n\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div>\n      {visible === false ? (\n        <div>\n          <button onClick={toggleVisible}>{props.buttonLabel}</button>\n        </div>\n      ) : (\n        <div>\n          {props.children}\n          <button onClick={toggleVisible}>cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Togglable;\n"]},"metadata":{},"sourceType":"module"}