{"ast":null,"code":"var _jsxFileName = \"/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    author: '',\n    url: ''\n  });\n  const [message, setMessage] = useState(null);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedblogUserJSON');\n\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON);\n      setUser(loggedUser);\n      blogService.setToken(loggedUser.token);\n      console.log('user successfully logged in');\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      window.localStorage.setItem('loggedblogUserJSON', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setMessage(`user ${user.name} successfully logged in`);\n    } catch (exception) {\n      console.log('invalid credentials');\n    }\n\n    setUsername('');\n    setPassword('');\n  };\n\n  const handleLogout = () => {\n    window.localStorage.clear();\n    setUser(null);\n    blogService.setToken(null);\n    console.log('successfully logged out');\n  };\n\n  const createNewBlog = async event => {\n    event.preventDefault();\n    console.log(newBlog);\n    const savedBlog = await blogService.create(newBlog);\n    setBlogs(blogs.concat(savedBlog));\n    console.log('new blog successfully created');\n    setNewBlog({\n      title: '',\n      author: '',\n      url: ''\n    });\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"log in to application\"), React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"username\", React.createElement(\"input\", {\n      value: username,\n      text: \"username\",\n      onChange: ({\n        target\n      }) => setUsername(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"password\", React.createElement(\"input\", {\n      value: password,\n      text: \"password\",\n      onChange: ({\n        target\n      }) => setPassword(target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"login\")));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(Notification, {\n    message: message,\n    isError: isError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, user.name, \" logged in\", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"create new\"), React.createElement(\"form\", {\n    onSubmit: createNewBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"title:\", React.createElement(\"input\", {\n    value: newBlog.title,\n    text: \"blogTitle\",\n    onChange: ({\n      target\n    }) => setNewBlog({ ...newBlog,\n      title: target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"author:\", React.createElement(\"input\", {\n    value: newBlog.author,\n    text: \"blogAuthor\",\n    onChange: ({\n      target\n    }) => setNewBlog({ ...newBlog,\n      author: target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"url:\", React.createElement(\"input\", {\n    value: newBlog.url,\n    text: \"blogUrl\",\n    onChange: ({\n      target\n    }) => setNewBlog({ ...newBlog,\n      url: target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"create\")), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/tedmund/Documents/fso2020/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","Notification","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","newBlog","setNewBlog","title","author","url","message","setMessage","isError","setIsError","getAll","then","loggedUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","setToken","token","console","log","handleLogin","event","preventDefault","login","setItem","stringify","name","exception","handleLogout","clear","createNewBlog","savedBlog","create","concat","target","value","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    author: '',\n    url: '',\n  });\n\n  const [message, setMessage] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedblogUserJSON');\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON);\n      setUser(loggedUser);\n      blogService.setToken(loggedUser.token);\n      console.log('user successfully logged in');\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({ username, password });\n\n      setUser(user);\n      window.localStorage.setItem('loggedblogUserJSON', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setMessage(`user ${user.name} successfully logged in`)\n    } catch (exception) {\n      console.log('invalid credentials');\n    }\n    setUsername('');\n    setPassword('');\n  };\n\n  const handleLogout = () => {\n    window.localStorage.clear();\n    setUser(null);\n    blogService.setToken(null);\n    console.log('successfully logged out');\n  };\n\n  const createNewBlog = async (event) => {\n    event.preventDefault();\n    console.log(newBlog);\n    const savedBlog = await blogService.create(newBlog);\n    setBlogs(blogs.concat(savedBlog));\n    console.log('new blog successfully created');\n\n    setNewBlog({\n      title: '',\n      author: '',\n      url: '',\n    });\n  };\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              value={username}\n              text='username'\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              value={password}\n              text='password'\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <h2>blogs</h2>\n        <Notification message={message} isError={isError} />\n        <p>\n          {user.name} logged in\n          <button onClick={handleLogout}>logout</button>\n        </p>\n        <h2>create new</h2>\n        <form onSubmit={createNewBlog}>\n          <div>\n            title:\n            <input\n              value={newBlog.title}\n              text='blogTitle'\n              onChange={({ target }) =>\n                setNewBlog({\n                  ...newBlog,\n                  title: target.value,\n                })\n              }\n            />\n          </div>\n          <div>\n            author:\n            <input\n              value={newBlog.author}\n              text='blogAuthor'\n              onChange={({ target }) =>\n                setNewBlog({\n                  ...newBlog,\n                  author: target.value,\n                })\n              }\n            />\n          </div>\n          <div>\n            url:\n            <input\n              value={newBlog.url}\n              text='blogUrl'\n              onChange={({ target }) =>\n                setNewBlog({\n                  ...newBlog,\n                  url: target.value,\n                })\n              }\n            />\n          </div>\n          <button type='submit'>create</button>\n        </form>\n        {blogs.map((blog) => (\n          <Blog key={blog.id} blog={blog} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}