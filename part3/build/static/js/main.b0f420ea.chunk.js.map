{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleNewFilter","value","onChange","PersonForm","props","onSubmit","handleNewPerson","newName","handleNewName","newNumber","handleNewNumber","type","Persons","persons","removePerson","map","person","key","indexOf","name","number","onClick","id","baseURL","axios","get","then","response","data","newPerson","post","console","log","delete","put","Notification","message","notificationStyle","background","color","fontSize","borderStyle","padding","marginLeft","marginRight","borderColor","borderRadius","marginBottom","backgroundColor","isError","errorStyle","style","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setIsError","useEffect","personService","initialPeople","filter","event","target","filteredNames","toLowerCase","includes","allPeople","preventDefault","window","confirm","personToChange","find","changedPerson","returnedPerson","catch","error","setTimeout","concat","personToRemove","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0f420ea.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handleNewFilter }) => {\n  return (\n    <form>\n      <div>\n        filter shown with <input value={newFilter} onChange={handleNewFilter} />\n      </div>\n    </form>\n  );\n};\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleNewPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNewName} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input value={props.newNumber} onChange={props.handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, removePerson }) => {\n  // *** remove represents the function removePerson\n  return (\n    <div>\n      {persons.map((person) => (\n        <p key={persons.indexOf(person)}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => removePerson(person.id)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nconst create = (newPerson) => {\n  return axios.post(baseURL, newPerson).then((response) => response.data);\n};\n\nconst getAll = () => {\n  return axios.get(baseURL).then((response) => response.data);\n};\n\nconst update = (id, newNumber) => {\n  console.log(`${baseURL}/${id}`);\n  return axios\n    .put(`${baseURL}/${id}`, newNumber)\n    .then((response) => response.data);\n};\n\nconst remove = (id) => {\n  console.log(`${baseURL}/${id}`);\n  return axios.delete(`${baseURL}/${id}`).then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n  const notificationStyle = {\n    background: \"lightgrey\",\n    color: \"green\",\n    fontSize: 18,\n    borderStyle: \"solid\",\n    padding: \"0.8em\",\n    marginLeft: \"0.5em\",\n    marginRight: \"0.5em\",\n    borderColor: \"green\",\n    borderRadius: 5,\n    marginBottom: \"1em\",\n    backgroundColor: \"lightgrey\",\n  };\n\n  if (isError === true) {\n    const errorStyle = {\n      ...notificationStyle,\n      color: \"red\",\n      borderColor: \"red\",\n    };\n    return <div style={errorStyle}>{message}</div>;\n  }\n\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={notificationStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport axios from \"axios\";\nimport personService from \"./services/person\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isError, setIsError] = useState(false)\n\n  useEffect(() => {\n    personService.getAll().then((initialPeople) => {\n      setPersons(initialPeople);\n    });\n  }, []);\n\n  // Event handler for changes in input values for 'name'\n  const handleNewName = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  // Event handler for changes in input values for 'number'\n  const handleNewNumber = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  // Event handler for changes in input values for 'filter'\n  const handleNewFilter = (event) => {\n    console.log(event.target.value);\n    setNewFilter(event.target.value);\n    const filteredNames = persons.filter((person) =>\n      person.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    setPersons(filteredNames);\n    // Accounting for when the filter field is blank (after inputting some value)\n    if (event.target.value === \"\") {\n      personService.getAll().then((allPeople) => {\n        setPersons(allPeople);\n      });\n    }\n  };\n\n  // Event handler for adding a person to the existing database/numbers record\n  const handleNewPerson = (event) => {\n    event.preventDefault();\n    const names = persons.map((person) => person.name);\n    // Case 1: Person already exists in database/records\n    if (names.includes(newName) === true) {\n      const confirmation = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (confirmation === true) {\n        const personToChange = persons.find(\n          (person) => person.name === newName\n        );\n        const changedPerson = { ...personToChange, number: newNumber };\n        // Need to update both the database and the current state\n        personService\n          .update(changedPerson.id, changedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.name !== personToChange.name ? person : returnedPerson\n              )\n            );\n          })\n          .catch((error) => {\n            setMessage(\n              `Information of ${newName} has already been removed from server`\n            );\n            setIsError(true)\n            setTimeout(() => {\n              setMessage(null);\n              setIsError(false)\n            }, 5000);\n          });\n\n        setMessage(`Changed number of ${changedPerson.name}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }\n      // Case 2: Person does not exist in database/records\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      personService.create(newPerson).then((returnedPerson) => {\n        // Updating state in App component\n        // Without this line, the front-end state will not be updated with this POST request\n        setPersons(persons.concat(returnedPerson));\n      });\n      setMessage(`Added ${newPerson.name}`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n    // Resetting input boxes\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // Deleting person entry from database and records\n  const removePerson = (id) => {\n    const personToRemove = persons.find((person) => person.id === id);\n    const confirmation = window.confirm(`Delete ${personToRemove.name} ?`);\n    if (confirmation === true) {\n      const newPersons = persons.filter((person) => person.id !== id);\n      setPersons(newPersons);\n      personService.remove(id);\n      console.log(\"person removed from database\");\n\n      setMessage(`Removed ${personToRemove.name} from database`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isError={isError} />\n      <Filter filter={newFilter} handleNewFilter={handleNewFilter} />\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n        handleNewPerson={handleNewPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} removePerson={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}